# https://www.codingame.com/ide/puzzle/production-pipeline

import math,sys,copy


def suche(graph,visited,nachbarn,zList):
    return 0

n=8;iList=['2<5', '3<4', '5<4'] #1
#n=16;iList=['6<4', '4<3', '3<6', '7<5', '6<5'] #2
#n=20;iList=['5<9', '3<1', '12<8', '6<12', '20<14', '2<5', '15<2']  # 3
#6
#n=150;iList=['16<106', '122<34', '9<1', '35<142', '45<52', '73<96', '116<102', '137<50', '60<74', '108<6', '119<11', '87<145', '51<124', '137<47', '150<89', '55<114', '63<95', '49<145', '44<52', '114<22', '85<9', '5<97', '49<67', '19<47', '30<10', '5<45', '134<76', '123<93', '119<128', '63<150', '26<45', '64<52', '34<97', '131<144', '36<44', '48<87', '70<65', '62<117', '19<47', '1<16', '141<108', '145<79', '103<3', '99<132', '28<134', '23<87', '47<107', '107<136', '16<94', '132<31', '55<32', '123<142', '4<150', '48<131', '96<121', '13<124', '58<34', '47<75', '131<24', '54<149', '98<122', '109<21', '105<120', '38<143', '60<133', '130<83', '115<44', '95<93', '10<75', '149<96', '9<82', '117<60', '12<96', '119<108', '73<97', '76<27', '73<30', '141<41', '23<89', '65<99', '19<47', '150<100', '43<131', '20<71', '109<7', '81<33', '12<17', '130<147', '127<131', '106<149', '39<82', '78<124', '6<68', '71<44', '135<81', '121<116', '105<60', '74<55', '105<103', '131<69', '53<55', '98<25', '58<7', '28<58', '47<45', '102<81', '36<114', '13<104', '41<30', '42<6', '40<27', '49<98', '129<101', '41<107', '77<92', '123<87', '51<70', '40<38', '48<47', '12<149', '142<10', '135<31', '53<13', '136<111', '66<67', '16<139', '148<96', '88<18', '70<139', '69<54', '117<40', '39<110', '43<56', '87<117', '44<141', '7<82', '19<73', '68<17', '29<84', '47<12', '62<144', '109<83', '47<63', '85<68', '71<142', '24<107', '88<21', '117<129', '16<46', '17<112']
#7
#n=250;iList=['108<248', '237<52', '47<140', '45<182', '31<182', '127<132', '13<74', '171<175', '155<74', '139<99', '92<33', '106<66', '24<45', '91<47', '125<69', '115<209', '54<76', '107<223', '125<99', '78<127', '242<153', '107<106', '96<48', '138<12', '22<76', '113<151', '21<69', '249<45', '43<155', '42<196', '70<17', '241<24', '152<225', '108<174', '113<173', '235<52', '199<162', '19<126', '125<232', '241<198', '26<149', '134<167', '45<5', '57<82', '23<97', '179<166', '98<195', '182<40', '72<75', '162<75', '40<194', '74<3', '212<161', '126<222', '162<153', '223<38', '195<209', '23<75', '66<32', '237<171', '113<221', '62<115', '37<53', '116<221', '51<241', '87<179', '219<74', '141<75', '169<27', '211<25', '77<234', '172<166', '128<122', '211<106', '196<3', '203<179', '131<175', '171<206', '229<184', '190<81', '117<106', '237<73', '28<135', '109<104', '160<107', '241<21', '145<150', '115<86', '152<192', '93<241', '202<136', '33<190', '88<153', '235<156', '215<144', '20<82', '105<8', '200<178', '70<76', '203<25', '75<171', '145<164', '86<100', '26<44', '250<247', '125<144', '172<41', '51<180', '79<181', '24<188', '226<217', '224<206', '235<165', '27<159', '96<115', '201<100', '70<119', '73<54', '191<133', '66<7', '180<209', '249<217', '178<69', '117<23', '239<28', '36<18', '45<96', '91<218', '97<1', '62<98', '211<191', '234<28', '158<17', '196<216', '70<95', '41<153', '215<220', '217<142', '71<57', '194<167', '44<110', '220<107', '216<68', '133<222', '32<39', '242<107', '144<163', '89<186', '61<188', '226<99', '107<136', '5<92', '194<53', '244<36', '233<132', '145<161', '200<227', '199<44', '179<103', '209<75', '143<228', '4<143', '224<27', '126<180', '58<157', '240<133', '119<43', '161<153', '2<188', '7<243', '42<118', '16<12', '164<186', '167<34', '81<99', '35<113', '23<248', '73<130', '67<8', '129<32', '68<20', '60<168', '207<178', '139<89', '189<131', '105<55', '173<91', '98<219', '201<209', '156<82', '66<54', '138<107', '169<142', '249<61', '156<116', '243<105', '97<173', '57<198', '156<170', '32<55', '97<132', '94<231', '121<213', '160<131', '122<12', '33<19', '204<49', '131<52', '234<136', '102<210', '203<30', '151<162', '162<23', '6<205', '38<217', '63<250', '132<148', '243<188', '61<205', '212<237', '54<171', '122<215', '154<161', '176<186', '218<39', '185<84', '165<202', '81<177', '72<40', '124<41', '102<134', '2<84', '43<203', '110<240', '172<107', '175<20', '137<150', '58<139', '207<173', '13<97', '244<80', '140<233', '38<44', '53<13', '190<43', '150<181', '118<24', '216<13', '90<243', '82<8']



graph={};zahlList=[];erg="";ergList=[]
for i in range(1,n+1):
    graph[i] = []
    zahlList.append(i)
#print(graph,file=sys.stderr)    

for i in iList:
    print(i,file=sys.stderr)
    iL = i.split("<")
    if iL[0] == iL[1]:
        erg=" INVALID";break
    zahl1 = int(iL[0]);zahl2=int(iL[1])   
    nList = graph[zahl2]
    nList.append(zahl1)
print(graph,file=sys.stderr)

ketten=[];erList=[];visited=[]
if len(erg) == 0:
    for zahl in range(1,n+1):        
        if len(graph[zahl]) > 0 and not zahl in visited:            
            zList=[];visited.append(zahl);zList.insert(0,zahl)
            suche(graph,visited,graph[zahl],zList)


'''
zahl=1
if len(erg) == 0:
    for i in range(1,n+1):
        if len(graph[zahl]) == 0 or not zahl in zahlList:
            if not zahl in zahlList:
                while(True):
                    zahl+=1
                    if zahl in zahlList:
                        break            
            if len(graph[zahl]) == 0:
                zwList=[];geschrieben=False
                for e in ergList:
                    if zahl < e and not geschrieben:
                        zwList.append(zahl);geschrieben=True
                    zwList.append(e)  
                if not geschrieben:
                    zwList.append(zahl)   
                ergList = copy.deepcopy(zwList)               
            else:
                ergList.append(zahl)
            zahlList.remove(zahl);zahl+=1
        else:
            zahlUr=zahl
            suchList=[]
            while (True):
                nList = graph[zahl]
                offen=[]
                for n in nList:
                    if n in zahlList:
                        offen.append(n)
                if len(offen) > 0:
                    offen.sort()
                    zahl = offen[0]
                    if zahl in suchList:
                        erg=" INVALID";break
                    suchList.append(zahl)                
                else:
                    ergList.append(zahl)
                    zahlList.remove(zahl);break
            zahl=zahlList[0]
'''
if len(erg) == 0:
    for e in ergList:
        erg=erg+" "+str(e)
print(erg[1:])

