import sys
import math
import copy



def pruefe(z,zahlList,n,x,y,wert,tabFeld):
    tabFeld.remove(str(y)+"-"+str(x))
    schritte = [[1,0],[-1,0],[0,1],[0,-1]]
    for tab in schritte:
        x1 = x + tab[0]
        y1 = y + tab[1]
        if x1 < 0 or y1 < 0 or x1 == n or y1 == n:
            wert = - 99999999999999
            break
        elif zahlList[y1][x1] > z:
            wert = wert + 1
        else:
            if str(y1)+"-"+str(x1) in tabFeld:
                wert = wert + pruefe(z,zahlList,n,x1,y1,wert,tabFeld)
        if wert < 0:
            break
    return wert

def setzeHoch(z,zahlList,n,tabFeld):
    erg = 0
    for x in range(1,n-1):
        for y in range(1,n-1):
            if zahlList[y][x] == z:  
                zwFeld = tabFeld[:]              
                wert = pruefe(z,zahlList,n,x,y,0,zwFeld)
                if wert > 0:
                    zahlList[y][x] += 1
                    erg += 1
    return erg


schritte = [[1,0],[-1,0],[0,1],[0,-1]]
wList = {'Z':26,'A':1,'B':2,'C':3,'E':5,'R':18,'F':6,'D':4,'G':7,'H':8,'I':9,'J':10,
'K':11,'L':12,'M':13,'N':14,'O':15,'P':16,'Q':17,'S':19,'T':20,'U':21,'V':22,
'W':23,'X':24,'Y':25}

n = 20
zahlList = [[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], 
[4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3], 
[4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4], 
[4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4], 
[4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 5, 5, 6, 6], 
[7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 10, 10, 5, 5, 6, 6],
 [7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 10, 10, 5, 5, 6, 6],
[11, 11, 11, 11, 11, 12, 12, 12, 12, 8, 8, 8, 9, 9, 10, 10, 13, 13, 13, 13], 
[11, 11, 11, 11, 11, 12, 12, 12, 12, 14, 14, 15, 15, 16, 16, 16, 13, 13, 13, 13],
 [17, 17, 17, 17, 18, 18, 19, 19, 19, 14, 14, 15, 15, 16, 16, 16, 20, 20, 20, 20],
  [17, 17, 17, 17, 18, 18, 19, 19, 19, 14, 14, 15, 15, 21, 21, 21, 20, 20, 20, 20], 
[22, 22, 22, 22, 18, 18, 23, 23, 23, 14, 14, 24, 24, 21, 21, 21, 25, 25, 25, 25], 
[22, 22, 22, 22, 18, 18, 23, 23, 23, 26, 26, 24, 24, 1, 1, 1, 25, 25, 25, 25],
[22, 22, 22, 22, 2, 2, 2, 2, 2, 26, 26, 24, 24, 1, 1, 1, 25, 25, 25, 25],
 [22, 22, 22, 22, 2, 2, 2, 2, 2, 26, 26, 3, 3, 3, 4, 4, 5, 5, 6, 18], 
 [7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 3, 3, 3, 4, 4, 5, 5, 6, 18], 
 [7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 11, 11, 11, 4, 4, 5, 5, 6, 18],
  [7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 11, 11, 11, 4, 4, 5, 5, 6, 18],
[12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 18],
 [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]]
#erg = 368



n = 30
zahlList = [
[25, 5, 14, 26, 18, 7, 18, 14, 6, 11, 9, 14, 13, 3, 1, 7, 6, 13, 13, 7, 10, 23, 22, 26, 26, 18, 22, 3, 23, 17], 
[11, 11, 2, 1, 17, 16, 2, 14, 19, 23, 21, 24, 9, 4, 6, 8, 4, 26, 25, 14, 20, 15, 7, 20, 19, 1, 5, 11, 22, 19], 
[5, 7, 20, 12, 14, 24, 25, 23, 18, 8, 12, 12, 25, 20, 14, 7, 15, 25, 2, 12, 21, 12, 14, 15, 9, 7, 22, 13, 6, 22],
 [23, 11, 14, 26, 2, 25, 22, 16, 3, 23, 12, 24, 26, 19, 5, 19, 16, 26, 11, 9, 1, 3, 4, 2, 12, 7, 14, 20, 10, 26], 
 [13, 21, 18, 5, 23, 4, 12, 12, 10, 22, 20, 15, 7, 16, 15, 8, 23, 16, 7, 9, 18, 21, 4, 15, 12, 5, 7, 20, 18, 12],
 [12, 26, 11, 1, 22, 2, 1, 25, 2, 13, 14, 13, 15, 1, 1, 17, 7, 17, 11, 4, 3, 8, 7, 14, 15, 9, 2, 14, 14, 26], 
 [21, 18, 8, 2, 11, 9, 26, 4, 25, 19, 3, 16, 19, 7, 5, 8, 18, 9, 7, 9, 6, 5, 21, 25, 1, 23, 12, 25, 12, 24],
[25, 1, 19, 18, 1, 20, 23, 13, 23, 11, 15, 18, 17, 9, 10, 25, 8, 11, 3, 25, 19, 23, 18, 12, 26, 9, 25, 2, 25, 24],
[25, 3, 4, 25, 10, 20, 21, 15, 6, 8, 3, 23, 20, 5, 24, 5, 23, 9, 15, 10, 6, 21, 22, 22, 6, 19, 10, 12, 23, 12], 
[7, 21, 1, 23, 22, 18, 17, 5, 20, 1, 21, 14, 8, 17, 12, 13, 1, 18, 16, 6, 16, 6, 24, 3, 18, 18, 7, 22, 15, 9], 
[20, 7, 13, 3, 1, 2, 17, 10, 12, 6, 2, 18, 3, 25, 4, 17, 13, 23, 5, 11, 26, 10, 2, 25, 2, 6, 13, 1, 4, 14],
[7, 26, 13, 21, 22, 10, 11, 10, 6, 26, 19, 5, 23, 1, 13, 9, 9, 26, 23, 16, 13, 23, 12, 15, 17, 18, 17, 10, 10, 8],
[10, 15, 3, 14, 26, 8, 12, 3, 15, 18, 5, 14, 9, 9, 10, 17, 9, 14, 13, 18, 11, 26, 4, 15, 11, 16, 25, 10, 14, 23], 
[13, 4, 7, 21, 19, 24, 3, 3, 11, 24, 23, 17, 7, 3, 6, 26, 18, 2, 4, 6, 7, 20, 3, 8, 8, 2, 6, 7, 19, 2],
[17, 25, 1, 26, 7, 24, 21, 5, 21, 13, 26, 6, 21, 4, 3, 19, 7, 10, 26, 21, 6, 7, 8, 7, 21, 21, 2, 23, 9, 8], 
[14, 21, 22, 26, 4, 12, 21, 21, 25, 10, 25, 18, 7, 17, 19, 25, 8, 10, 10, 21, 11, 9, 1, 10, 7, 5, 11, 21, 17, 14],
[3, 14, 2, 17, 2, 4, 24, 1, 6, 4, 24, 14, 13, 12, 19, 26, 21, 15, 3, 12, 15, 3, 7, 25, 11, 22, 15, 22, 14, 5],
[16, 1, 18, 26, 15, 6, 21, 16, 6, 26, 20, 7, 18, 9, 20, 17, 24, 3, 13, 15, 26, 11, 24, 8, 3, 11, 2, 18, 13, 1], 
[9, 22, 15, 11, 16, 24, 17, 7, 5, 8, 15, 13, 12, 19, 23, 9, 5, 1, 20, 10, 21, 24, 1, 5, 4, 2, 11, 21, 6, 10],
[24, 22, 12, 19, 26, 19, 1, 15, 23, 26, 15, 5, 17, 3, 26, 23, 2, 11, 15, 20, 23, 8, 14, 7, 6, 17, 14, 15, 17, 14],
 [15, 18, 25, 6, 5, 2, 10, 9, 20, 15, 8, 10, 8, 10, 26, 8, 3, 12, 10, 14, 6, 26, 18, 7, 12, 8, 17, 18, 10, 1],
 [11, 26, 25, 5, 14, 1, 21, 26, 7, 18, 15, 15, 26, 9, 16, 3, 2, 11, 18, 2, 21, 14, 10, 23, 21, 16, 10, 18, 9, 7],
  [25, 14, 5, 16, 3, 15, 21, 5, 16, 17, 6, 5, 7, 7, 24, 19, 20, 12, 11, 23, 11, 10, 10, 10, 10, 15, 18, 21, 26, 2], 
  [7, 6, 14, 8, 15, 21, 23, 12, 18, 17, 22, 5, 19, 5, 15, 6, 4, 13, 2, 17, 17, 4, 3, 1, 3, 24, 12, 7, 25, 6],
[5, 2, 14, 14, 10, 11, 26, 25, 25, 15, 7, 7, 22, 21, 9, 4, 9, 5, 18, 15, 21, 20, 6, 14, 14, 19, 2, 2, 24, 2],
[2, 8, 18, 11, 4, 2, 22, 2, 2, 12, 5, 13, 16, 25, 22, 15, 15, 11, 7, 21, 16, 21, 7, 1, 17, 14, 13, 2, 7, 20],
[26, 4, 15, 12, 8, 18, 3, 19, 3, 12, 8, 20, 9, 24, 18, 16, 3, 20, 26, 13, 6, 17, 24, 3, 18, 14, 14, 13, 21, 20],
[19, 24, 2, 18, 1, 1, 20, 15, 13, 11, 14, 18, 6, 7, 5, 13, 14, 5, 26, 11, 3, 19, 24, 13, 16, 11, 11, 13, 10, 22],
 [4, 11, 13, 10, 8, 21, 25, 12, 23, 19, 8, 2, 9, 24, 10, 8, 13, 24, 5, 15, 19, 20, 12, 13, 5, 24, 21, 16, 17, 2], 
[19, 26, 10, 19, 15, 3, 2, 17, 22, 5, 12, 22, 15, 15, 23, 8, 7, 10, 3, 20, 19, 17, 15, 25, 14, 6, 20, 15, 11, 16]]
#erg = 2440


'''
n = 5
zahlList = [
[3,3,3,3,3],
[3,3,3,3,3],
[3,4,3,2,3],
[13,4,7,21,19],
[3,3,3,3,3]
]'''


#print(sorted(wList.items()),file=sys.stderr)
tabFeld = []
sichList = []
sichList = copy.deepcopy(zahlList)
for x in range(n):
    for y in range(n):
        tabFeld.append(str(x)+"-"+str(y))

erg = 0
for z in range(1,26):
    print(z,file=sys.stderr)
    wert = setzeHoch(z,zahlList,n,tabFeld)
    erg += wert
    '''
    for x in range(n):
        for y in range(n):
            if zahlList[x][y] >= z:
                if sichList[x][y] >= z:
                    print('X',end=" ",file=sys.stderr)
                else:
                    print('1',end=" ",file=sys.stderr)
            else:
                print(' ',end=" ",file=sys.stderr)
        print(" ",file=sys.stderr)
'''
 #   print(erg,file=sys.stderr)
print("------",file=sys.stderr)
print(erg)



'''
ergList =[]
ergList = copy.deepcopy(sichList[:])
for x in range(n):
    for y in range(n):
        ergList[x][y] = zahlList[x][y] - sichList[x][y]

for i in range(n):    
    for z in range(n):
        j = ergList[i][z]
        print(repr(j).rjust(2),end=" ")
    print(" ")
print("---------------",file=sys.stderr)
for i in range(n):
    for z in range(n):
        j = sichList[i][z]
        print(repr(j).rjust(2),end=" ")
    print(" ")
'''