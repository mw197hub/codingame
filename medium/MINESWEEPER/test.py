from copy import deepcopy
import itertools
import sys
import math
import itertools

moveList = [[-1,-1],[0,-1],[1,-1],[1,0],[1,1],[0,1],[-1,1],[-1,0]]
maxX=16;maxY=30
maxX=4;maxY=4

def pruefen(i,j,cellList,leerList,gesetztList):
    x,y,xM,yM=7,7,-1,-1;treffer=True;feldTreffer=[]
    for feldL in list(itertools.combinations(leerList,int(cellList[i][j] ))):
        treffer = True
        for move in moveList:
            xN=i+move[0];yN=j+move[1]
            if cellList[xN][yN] in ['1','2','3','4','5','6','7','8']:
                anzahl = 0;nachbar = False
                for mov2 in moveList:
                    x2=xN+mov2[0];y2=yN+mov2[1]
                    if [x2,y2] in feldL:
                        nachbar = True
                    if [x2,y2] in gesetztList or [x2,y2] in feldL:
                        anzahl+= 1
                #print(str(xN) + " - " + str(yN) + " Anzahl: " + str(anzahl))
                if nachbar and not anzahl == int(cellList[xN][yN]):
                    treffer = False
        if treffer:
            print(feldL,end="",file=sys.stderr);print(treffer,file=sys.stderr)
            for feld in feldL:
                feldTreffer.append(feld)
    print(feldTreffer,file=sys.stderr)
    if len(feldTreffer) == int(cellList[i][j]):
        for feld in leerList:
            if not feld in feldTreffer:
                x=feld[0];y=feld[1]
        return True,x,y,feldTreffer[0][0],feldTreffer[0][1]
    return treffer,x,y,xM,yM

def eindeutig(cellList,mineList,freiList,runde,gesetztList):
    x,y,xM,yM =7,7,-1,-1
    leerList=[];nachbarList=[]
    for i in range(len(cellList)):
        for j in range(len(cellList[0])):
            if cellList[i][j] in ['2','3','4','5','6','7','8']:
                print("i-j: "+str(i)+"-"+str(j),file=sys.stderr)
                for move in moveList:
                    xN=i+move[0];yN=j+move[1]
                    if xN >= 0 and xN < maxX and yN >= 0 and yN < maxY and cellList[xN][yN] =='?' and not [xN,yN] in gesetztList:                        
                        leerList.append([xN,yN])
                print(sorted(leerList),file=sys.stderr)
               # print(list(itertools.combinations(leerList,int(cellList[i][j] ))))
                treffer,x,y,xM,yM = pruefen(i,j,cellList,leerList,gesetztList)
                if treffer:
                    return x,y,xM,yM
            leerList.clear();nachbarList.clear()
    return x,y,xM,yM

runde = -1
cellList=[]
mineList = [];gesetztList=[];freiList=[]
while True:
    cellList.clear();freiList.clear()
    runde += 1

    cellList
   # cellList
   # cellList = [['?', '?', '?', '?', '?', '1', '.', '.', '.', '.', '.', '1', '?', '2', '2', '1', '1', '.', '.', '.', '.', '1', '?', '1', '1', '2', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '1', '1', '1', '1', '.', '.', '1', '3', '?', '3', '?', '2', '1', '1', '1', '1', '1', '2', '2', '3', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '2', '2', '?', '1', '.', '.', '.', '2', '?', '3', '2', '?', '2', '2', '?', '1', '.', '1', '?', '3', '?', '4', '2', '1', '?'], ['?', '?', '?', '?', '?', '?', '?', '3', '2', '.', '.', '.', '1', '2', '2', '2', '3', '?', '3', '2', '2', '1', '1', '1', '2', '2', '?', '1', '2', '?'], ['?', '?', '?', '?', '?', '?', '?', '?', '2', '.', '.', '.', '.', '1', '?', '1', '2', '?', '2', '1', '?', '1', '.', '.', '.', '1', '1', '2', '3', '?'], ['?', '?', '?', '?', '?', '?', '4', '?', '2', '.', '.', '.', '.', '1', '1', '2', '2', '3', '3', '3', '2', '1', '.', '.', '.', '.', '.', '1', '?', '?'], ['?', '?', '?', '?', '?', '?', '2', '1', '1', '.', '.', '.', '.', '.', '1', '2', '?', '2', '?', '?', '2', '2', '3', '2', '1', '.', '.', '2', '3', '?'], ['?', '?', '?', '?', '?', '?', '1', '.', '.', '.', '.', '1', '2', '2', '2', '?', '2', '2', '2', '2', '3', '?', '?', '?', '2', '1', '.', '2', '?', '?'], ['?', '?', '?', '?', '?', '?', '1', '1', '1', '1', '.', '1', '?', '?', '3', '2', '1', '.', '.', '1', '3', '?', '4', '3', '?', '3', '2', '3', '?', '?'], ['?', '?', '?', '?', '?', '?', '2', '2', '?', '2', '1', '1', '2', '3', '?', '2', '1', '2', '1', '3', '?', '3', '1', '2', '4', '?', '?', '5', '3', '?'], ['?', '?', '?', '?', '?', '?', '?', '?', '3', '?', '2', '1', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?']]
    cellList = [['1','2','?','?'],['?','?','?','?'],['?','3','3','?'],['?','?','3','1']]
    gesetztList = [[2,3],[3,0],[3,1],[1,3]]
    x,y,xM,yM=eindeutig(cellList,mineList,freiList,runde,gesetztList)

    if xM == -1:
        print(str(x)+" "+str(y))
    else:
        print(str(x)+ " "+ str(y) + " " + str(xM) + " " + str(yM))
        gesetztList.append([xM,yM])
    print(mineList,file=sys.stderr)
    if runde == 0:
        break

