# https://www.codingame.com/ide/puzzle/tiny-forest

import sys,math,time,copy

def testLauf(testList,start):
    #print(start,file=sys.stderr)
    nachbarList=[[1,0],[-1,0],[0,1],[0,-1]]
    anzahl=0;seedGrow=10;produceSeed=4
    testList[start[0]][start[1]] = 1
    for year in range(33):
        for y in range(len(testList)):
             for x in range(len(testList[0])):                 
                 if testList[y][x] == 10:
                    anzahl+=1
                    for nachbar in nachbarList:
                        y1=y+nachbar[0];x1=x+nachbar[1]
                        if y1 > -1 and x1 > -1 and y1 < len(testList) and x1 < len(testList[0]):
                            if testList[y1][x1] == 0:
                                testList[y1][x1] = 1
                    testList[y][x] = 20
                 elif testList[y][x] > 0:
                    testList[y][x] += 1
    
    return anzahl

rowList=[['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.']]
#rowList=[['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', '.', '.', 'Y']]
rowList


startZeit=time.time()
grid=[];leerList=[]
for y in range(len(rowList)):
    g=[]
    for x in range(len(rowList[0])):
        if rowList[y][x] == ".":
            g.append(0)
            leerList.append([y,x])
        else:
            g.append(10)
    grid.append(g[:])
    

erg=0
for leer in leerList:
    anz = testLauf(copy.deepcopy(grid),leer)
    if anz > erg:
        erg=anz

print(erg)
print("Zeit: {}".format(time.time()-startZeit),file=sys.stderr)